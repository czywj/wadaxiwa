<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	
	<!-- 配置数据源 -->
	<bean id="ds" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="url" value="#{db.url}"/>
		<property name="driverClassName" value="#{db.driver}"/>
		<property name="username" value="#{db.user}"/>
		<property name="password" value="#{db.pwd}"/>
	</bean>
	<util:properties id="db" location="classpath:db.properties"/>
	
	<!-- 配置SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
      <property name="dataSource" ref="ds" />
       <!-- 指定扫描哪些路径下的配置文件 -->
      <property name="mapperLocations"	value="classpath:com/tarena/dao/*.xml"/>
    </bean>
    
    <!-- 配置MyBatis注解 -->
    <!-- 在Spring容器初始化时，Spring会自动创建MapperScannerConfigurer，然后自动调用
    	它扫描指定包下，带有指定注解的接口，然后自动实现这个接口，在实现类中它主要封装了
    	创建连接、关闭练级、开启事务、关闭事务的代码，这样在开发时就可以简化了。 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      	 <!-- 指定MapperScannerConfigurer要扫描的包 -->
       <property name="basePackage" value="com.tarena.dao" />
       	 <!-- 指定MapperScannerConfigurer要扫描的注解，该注解需要自定义。 -->
       <property name="annotationClass" value="com.tarena.annotation.MyBatisRepository"/>
	</bean>

	<!-- 开启IOC组件扫描 -->
	<context:component-scan base-package="com.tarena"/>
	
	<!-- 开启Spring MVC注解扫描 -->
	<mvc:annotation-driven/>

	<!-- 处理请求转发 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/"/>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 注册拦截器 -->
	<mvc:interceptors> 
		<!-- 登录检查拦截器 -->
		<mvc:interceptor>
			<!-- 
				第一个*代表Controller类的访问路径
				第二个*代表Controller方法的访问路径
				即所有的方法都要受此拦截器检查 -->
			<mvc:mapping path="/**"/>
			<!-- 除以下登录方法，应包括登录成功之前的调用所有方法 -->
			<mvc:exclude-mapping path="/login/toLogin.do"/>
			<mvc:exclude-mapping path="/login/checkLogin.do"/>
			<mvc:exclude-mapping path="/login/createImage.do"/>
			<!-- 声明拦截器组件 -->
			<bean class="com.tarena.interceptor.CheckLoginInterceptor"/>
		</mvc:interceptor>
		<!-- 判断当前模块拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.tarena.interceptor.CurrentModuleInterceptor"/>
		</mvc:interceptor>
		<!-- 权限检查拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/login/*"/>
			<bean class="com.tarena.interceptor.CheckModuleInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 开启AOP注解扫描 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 处理异常 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
	        <props>
	              <prop key="java.lang.Exception">main/error</prop>
	        </props>
	    </property>
	</bean>	
		














</beans>